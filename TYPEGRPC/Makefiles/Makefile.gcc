#
# Copyright 2015 gRPC authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

############## IMPORTANT ##################
ROOT_GRP=FULL_PATH_TO_GRP_ROOT

HOST_SYSTEM = $(shell uname | cut -f 1 -d_)
SYSTEM ?= $(HOST_SYSTEM)
CXX = clang++-11.0 
CPPFLAGS += `pkg-config --cflags protobuf grpc `
CXXFLAGS += -std=c++20 -O3 

LDFLAGS += -I. -L$(ROOT_GRP)/lib64 -L$(ROOT_GRP)/lib   `pkg-config --libs protobuf grpc++` \
           -pthread\
           -Wl,--no-as-needed -lgrpc++_reflection -Wl,--as-needed -lm -static -fPIC -lpthread  -fpermissive\
           -ldl


LDFLAGSS += -I. -L$(ROOT_GRP)/lib64 -L$(ROOT_GRP)/lib `pkg-config --libs protobuf grpc++` \
           -pthread\
           -Wl,--no-as-needed -lgrpc++_reflection -Wl,-no-undefined -Wl,--as-needed -lm -lpthread -fPIC -fpermissive\
           -ldl

LDFLAGSI += -I.  -I$(ROOT_GRP)/include -L$(ROOT_GRP)/lib64 -L$(ROOT_GRP)/lib `pkg-config --libs protobuf grpc++` \
           -pthread\
           -Wl,--no-as-needed  -static -D_GNU_SOURCE -lgrpc++_reflection -Wl,--as-needed -lm  -lpthread -fPIC -fpermissive\
           -ldl

PROTOC = protoc-3.19.4.0
GRPC_CPP_PLUGIN = grpc_cpp_plugin
GRPC_CPP_PLUGIN_PATH ?= `which $(GRPC_CPP_PLUGIN)`

PROTOS_PATH = .

vpath %.proto $(PROTOS_PATH)

all: system-check carteiro_client carteiro_server libclient.so libserver.so


libclient.so:carteiro.pb.cc carteiro.grpc.pb.cc  client/carteiro_client.cc
	$(CXX) $^  $(LDFLAGSS) -fPIC -shared  -o $@

libserver.so: carteiro.pb.cc carteiro.grpc.pb.cc server/carteiro_server.cc
	$(CXX) $(LDFLAGSS) -fPIC -shared  $^  -lstdc++fs -o $@

carteiro_client: carteiro.pb.o carteiro.grpc.pb.o  client/carteiro_client.o
	$(CXX) $^ $(LDFLAGS) -static -o $@

carteiro_server: carteiro.pb.o carteiro.grpc.pb.o server/carteiro_server.o
	$(CXX)  $^ $(LDFLAGS)  -static  -lstdc++fs -o $@

%.grpc.pb.cc: %.proto
	$(PROTOC) -I $(PROTOS_PATH) --grpc_out=. --plugin=protoc-gen-grpc=$(GRPC_CPP_PLUGIN_PATH) $<

%.pb.cc: %.proto
	$(PROTOC) -I $(PROTOS_PATH) --cpp_out=. $<

clean:
	rm -f *.o *.pb.cc *.pb.h *.so carteiro_client carteiro_server server/carteiro_server.o client/carteiro_client.o


# The following is to test your system and ensure a smoother experience.
# They are by no means necessary to actually compile a grpc-enabled software.

PROTOC_CMD = which $(PROTOC)
PROTOC_CHECK_CMD = $(PROTOC) --version | grep -q libprotoc.3
PLUGIN_CHECK_CMD = which $(GRPC_CPP_PLUGIN)
HAS_PROTOC = $(shell $(PROTOC_CMD) > /dev/null && echo true || echo false)
ifeq ($(HAS_PROTOC),true)
HAS_VALID_PROTOC = $(shell $(PROTOC_CHECK_CMD) 2> /dev/null && echo true || echo false)
endif
HAS_PLUGIN = $(shell $(PLUGIN_CHECK_CMD) > /dev/null && echo true || echo false)

SYSTEM_OK = false
ifeq ($(HAS_VALID_PROTOC),true)
ifeq ($(HAS_PLUGIN),true)
SYSTEM_OK = true
endif
endif

system-check:
ifneq ($(HAS_VALID_PROTOC),true)
	@echo " DEPENDENCY ERROR"
	@echo
	@echo "You don't have protoc 3.0.0 installed in your path."
	@echo "Please install Google protocol buffers 3.0.0 and its compiler."
	@echo "You can find it here:"
	@echo
	@echo "   https://github.com/protocolbuffers/protobuf/releases/tag/v3.0.0"
	@echo
	@echo "Here is what I get when trying to evaluate your version of protoc:"
	@echo
	-$(PROTOC) --version
	@echo
	@echo
endif
ifneq ($(HAS_PLUGIN),true)
	@echo " DEPENDENCY ERROR"
	@echo
	@echo "You don't have the grpc c++ protobuf plugin installed in your path."
	@echo "Please install grpc. You can find it here:"
	@echo
	@echo "   https://github.com/grpc/grpc"
	@echo
	@echo "Here is what I get when trying to detect if you have the plugin:"
	@echo
	-which $(GRPC_CPP_PLUGIN)
	@echo
	@echo
endif
ifneq ($(SYSTEM_OK),true)
	@false
endif
